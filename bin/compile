#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

build_dir=$1
cache_dir=$2
env_dir=$3

function indent() {
    c='s/^/       /'
    case $(uname) in
        Darwin) sed -l "$c";;
        *)      sed -u "$c";;
    esac
}

function topic() {
  echo "-----> $*"
}

# .heroku is the dir where builpacks are persisted
function install_platform_cli() {
    local build_dir=$1
    topic "Downloading Platfrom.sh cli"

    curl -sS https://platform.sh/cli/installer | php | indent
    mv "$HOME/.platformsh" "$build_dir/.heroku/.platformsh"
    chmod +x "$build_dir/.heroku/.platformsh/bin/platform"
}

# Add .sh fie in .profile.d so that platform is automatically sourced when the heroku app is started
function write_profile() {
    local build_dir=$1
    topic "Creating source file"

    mkdir -p "$build_dir/.profile.d"
    new_source_file="$build_dir/.profile.d/platformsh_cli.sh"
    echo "export PATH=\"$HOME/.heroku/.platformsh/bin:\$PATH\"" > $new_source_file
}

# Manually add ssh keys to known_hosts to prevent question for unestablished authenticity of host
function add_ssh_known_hosts() { 
    local build_dir=$1
    topic "Adding ssh keys to known_hosts"

    mkdir -p $build_dir/.ssh
    test -f $build_dir/.ssh/known_hosts || touch  $build_dir/.ssh/known_hosts
    ssh-keyscan 'ssh.eu-2.platform.sh' >> $build_dir/.ssh/known_hosts
    ssh-keyscan 'git.eu-2.platform.sh' >> $build_dir/.ssh/known_hosts
}

install_platform_cli $build_dir
write_profile $build_dir
add_ssh_known_hosts $build_dir
